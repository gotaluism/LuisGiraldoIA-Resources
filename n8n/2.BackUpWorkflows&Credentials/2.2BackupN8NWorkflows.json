{
    "nodes": [
      {
        "parameters": {
          "content": "## Subwflujo\n",
          "height": 751,
          "width": 2367,
          "color": 6
        },
        "id": "00ac8ca5-34e6-4e9e-abad-6beb7982cbf0",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          240,
          40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
                "name": "Done",
                "type": "boolean",
                "value": true
              }
            ]
          },
          "options": {}
        },
        "id": "43c91484-4119-4182-a2a8-784ae5de2044",
        "name": "Return",
        "type": "n8n-nodes-base.set",
        "position": [
          2360,
          240
        ],
        "typeVersion": 3.3
      },
      {
        "parameters": {
          "url": "={{ $json.download_url }}",
          "options": {}
        },
        "id": "b3d66851-6bd0-4481-840e-ff4ee05335af",
        "name": "Get File",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          1460,
          120
        ],
        "typeVersion": 4.2
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 1,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
                "operator": {
                  "type": "string",
                  "operation": "empty",
                  "singleValue": true
                },
                "leftValue": "={{ $json.content }}",
                "rightValue": ""
              },
              {
                "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
                "operator": {
                  "type": "string",
                  "operation": "notExists",
                  "singleValue": true
                },
                "leftValue": "={{ $json.error }}",
                "rightValue": ""
              }
            ]
          },
          "options": {}
        },
        "id": "b15a53b6-6742-4b51-b41a-22c05bb0a3d8",
        "name": "If file too large",
        "type": "n8n-nodes-base.if",
        "position": [
          1260,
          140
        ],
        "typeVersion": 2
      },
      {
        "parameters": {},
        "id": "7e5d0b8e-e230-48e2-822a-c43706ad9777",
        "name": "Merge Items",
        "type": "n8n-nodes-base.merge",
        "position": [
          1260,
          560
        ],
        "typeVersion": 2
      },
      {
        "parameters": {
          "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
        },
        "id": "d881fc6c-1861-43f5-b173-0bd5e657dc45",
        "name": "isDiffOrNew",
        "type": "n8n-nodes-base.code",
        "position": [
          1460,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "dataType": "string",
          "value1": "={{$json.github_status}}",
          "rules": {
            "rules": [
              {
                "value2": "same"
              },
              {
                "value2": "different",
                "output": 1
              },
              {
                "value2": "new",
                "output": 2
              }
            ]
          }
        },
        "id": "bf28e32b-794f-45ba-8d87-d35e238170b8",
        "name": "Check Status",
        "type": "n8n-nodes-base.switch",
        "position": [
          1680,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {},
        "id": "e43d2726-d4c8-44a1-b444-08f03c2d18b5",
        "name": "Same file - Do nothing",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1900,
          240
        ],
        "typeVersion": 1
      },
      {
        "parameters": {},
        "id": "0adcf200-13ec-479c-bfcd-f4841f30a0c5",
        "name": "File is different",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1900,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {},
        "id": "0ca1588f-cdb7-4e8a-ad13-3b82571bc312",
        "name": "File is new",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1900,
          560
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "resource": "file",
          "owner": {
            "__rl": true,
            "value": "={{ $('NombreRepo').item.json.repo.owner }}",
            "mode": "name"
          },
          "repository": {
            "__rl": true,
            "value": "={{ $('NombreRepo').item.json.repo.name }}",
            "mode": "name"
          },
          "filePath": "={{ $('NombreRepo').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
          "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
          "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
        },
        "id": "4b4a36af-6c62-4685-8529-e49b25cb2c64",
        "name": "Create new file",
        "type": "n8n-nodes-base.github",
        "position": [
          2120,
          560
        ],
        "typeVersion": 1,
        "webhookId": "57f3f169-11b3-4d6f-b1c1-c1142972aaee",
        "credentials": {
          "githubApi": {
            "id": "Wxxxxxx",
            "name": "Account"
          }
        }
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "edit",
          "owner": {
            "__rl": true,
            "value": "={{ $('NombreRepo').item.json.repo.owner }}",
            "mode": "name"
          },
          "repository": {
            "__rl": true,
            "value": "={{ $('NombreRepo').item.json.repo.name }}",
            "mode": "name"
          },
          "filePath": "={{ $('NombreRepo').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
          "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
          "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
        },
        "id": "939435d2-280d-4950-9a4e-1609ae8f64e8",
        "name": "Edit existing file",
        "type": "n8n-nodes-base.github",
        "position": [
          2120,
          380
        ],
        "typeVersion": 1,
        "webhookId": "91959538-2afb-4f0b-b6ee-9123105772e4",
        "credentials": {
          "githubApi": {
            "id": "WUluoSAmAjnBCjzp",
            "name": "Gotaluism Account"
          }
        }
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "get",
          "owner": {
            "__rl": true,
            "mode": "name",
            "value": "={{ $json.repo.owner }}"
          },
          "repository": {
            "__rl": true,
            "mode": "name",
            "value": "={{ $json.repo.name }}"
          },
          "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
          "asBinaryProperty": false,
          "additionalParameters": {}
        },
        "id": "de7781f0-2a43-4070-abfb-95dfa8df1230",
        "name": "Get file data",
        "type": "n8n-nodes-base.github",
        "position": [
          1060,
          140
        ],
        "typeVersion": 1,
        "alwaysOutputData": true,
        "webhookId": "a45a619e-dbdc-40fb-b3df-15a9aff99d3f",
        "credentials": {
          "githubApi": {
            "id": "WUluoSAmAjnBCjzp",
            "name": "Gotaluism Account"
          }
        },
        "continueOnFail": true
      },
      {
        "parameters": {
          "content": "## Edita este nodo 👇",
          "height": 80,
          "width": 150,
          "color": 4
        },
        "id": "f83a77fb-76e3-4872-8415-551f1ba56360",
        "name": "Sticky Note3",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          820,
          40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "id": "90990490-e01c-4c24-86cf-3db1adf47c42",
        "name": "Execute Workflow Trigger",
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "position": [
          -540,
          400
        ],
        "typeVersion": 1.1
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "a5c0c038-d70d-4806-905c-e74e71edbbad",
                "leftValue": "={{ $json.data}}",
                "rightValue": "",
                "operator": {
                  "type": "object",
                  "operation": "exists",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -340,
          140
        ],
        "id": "ba070be0-e9cb-4e5d-9366-58c2e7f9da88",
        "name": "If"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "operator": {
                        "type": "object",
                        "operation": "exists",
                        "singleValue": true
                      },
                      "leftValue": "={{ $json.tags[0] }}",
                      "rightValue": ""
                    }
                  ]
                },
                "renameOutput": true,
                "outputKey": "tag"
              },
              {
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "2656fbe3-fe35-4770-9c03-9a455ec618e4",
                      "operator": {
                        "type": "object",
                        "operation": "notExists",
                        "singleValue": true
                      },
                      "leftValue": "={{ $json.tags[0] }}",
                      "rightValue": ""
                    }
                  ]
                },
                "renameOutput": true,
                "outputKey": "none"
              }
            ]
          },
          "options": {}
        },
        "id": "c1445a1f-446d-49de-816d-9ced3e6a0841",
        "name": "tag?",
        "type": "n8n-nodes-base.switch",
        "position": [
          20,
          300
        ],
        "typeVersion": 3.2
      },
      {
        "parameters": {
          "content": "### True = Ruta para backup de las credenciales",
          "height": 80,
          "width": 180
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -320,
          40
        ],
        "id": "39295a08-df30-4f87-9623-6d190efbcb09",
        "name": "Sticky Note1"
      },
      {
        "parameters": {
          "content": "### False = Ruta para backup de workflows",
          "height": 80,
          "width": 160
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -320,
          280
        ],
        "id": "b947442b-5735-49c3-b068-409f9142cdd0",
        "name": "Sticky Note2"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "9954810e-6998-461a-a8f4-205dce98e60e",
                "name": "pathTag",
                "value": "={{ $('Execute Workflow Trigger').item.json.tags[0].name }}/",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          320,
          200
        ],
        "id": "5adcb54f-78bb-41dc-af62-dd4f7da72c8e",
        "name": "extraeTag"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
                "name": "=repo.path",
                "type": "string",
                "value": "=workflows/{{ $json.pathTag}}"
              }
            ]
          },
          "options": {}
        },
        "id": "df098a92-6746-44a5-a3cf-103ef83def86",
        "name": "RutaWorkflows",
        "type": "n8n-nodes-base.set",
        "position": [
          600,
          300
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
                "name": "repo.path",
                "type": "string",
                "value": "credentials/"
              }
            ]
          },
          "options": {}
        },
        "id": "9872ee5f-a99f-4e24-a42f-f8ab33282eb9",
        "name": "RutaCredenciales",
        "type": "n8n-nodes-base.set",
        "position": [
          560,
          120
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "200df91c-34d4-47f4-8344-b5f8672e3869",
                "name": "repo.owner",
                "value": "=[tu usuario en github]",
                "type": "string"
              },
              {
                "id": "769e66ea-2ef6-4331-97f9-62d727eec1ad",
                "name": "repo.name",
                "value": "=[el nombre de tu repositorio]",
                "type": "string"
              },
              {
                "id": "fe0942a6-72ee-4511-b075-3101b0ee929a",
                "name": "repo.path",
                "value": "={{ $json.repo.path }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          840,
          160
        ],
        "id": "c45f759e-df33-4f6f-bf4f-3b471711cae7",
        "name": "NombreRepo"
      }
    ],
    "connections": {
      "Get File": {
        "main": [
          [
            {
              "node": "Merge Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If file too large": {
        "main": [
          [
            {
              "node": "Get File",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Merge Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge Items": {
        "main": [
          [
            {
              "node": "isDiffOrNew",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "isDiffOrNew": {
        "main": [
          [
            {
              "node": "Check Status",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check Status": {
        "main": [
          [
            {
              "node": "Same file - Do nothing",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "File is different",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "File is new",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Same file - Do nothing": {
        "main": [
          [
            {
              "node": "Return",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "File is different": {
        "main": [
          [
            {
              "node": "Edit existing file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "File is new": {
        "main": [
          [
            {
              "node": "Create new file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create new file": {
        "main": [
          [
            {
              "node": "Return",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Edit existing file": {
        "main": [
          [
            {
              "node": "Return",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get file data": {
        "main": [
          [
            {
              "node": "If file too large",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Workflow Trigger": {
        "main": [
          [
            {
              "node": "Merge Items",
              "type": "main",
              "index": 1
            },
            {
              "node": "If",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If": {
        "main": [
          [
            {
              "node": "RutaCredenciales",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "tag?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "tag?": {
        "main": [
          [
            {
              "node": "extraeTag",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "RutaWorkflows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "extraeTag": {
        "main": [
          [
            {
              "node": "RutaWorkflows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "RutaWorkflows": {
        "main": [
          [
            {
              "node": "NombreRepo",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "RutaCredenciales": {
        "main": [
          [
            {
              "node": "NombreRepo",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "NombreRepo": {
        "main": [
          [
            {
              "node": "Get file data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {
      "Execute Workflow Trigger": [
        {
          "createdAt": "2025-06-01T22:54:32.858Z",
          "updatedAt": "2025-06-20T13:20:53.000Z",
          "id": "2Ij1cRxvtML3Ze2l",
          "name": "LinkedinPostRedacter",
          "active": true,
          "isArchived": false,
          "nodes": [
            {
              "parameters": {
                "public": true,
                "initialMessages": "Soy tu asistente para linkedin",
                "options": {}
              },
              "type": "@n8n/n8n-nodes-langchain.chatTrigger",
              "typeVersion": 1.1,
              "position": [
                -260,
                -100
              ],
              "id": "392a37d0-eb59-4405-9d2c-b619629adb34",
              "name": "When chat message received",
              "webhookId": "b6210ea7-414d-4643-883c-a8b1eb3b11f9"
            },
            {
              "parameters": {
                "resource": "assistant",
                "assistantId": {
                  "__rl": true,
                  "value": "asst_eFud7aTCR1LD2eurt5otfn9V",
                  "mode": "list",
                  "cachedResultName": "LinkedIn Assistant"
                },
                "prompt": "define",
                "text": "={{ $json.chatInput }}",
                "options": {}
              },
              "type": "@n8n/n8n-nodes-langchain.openAi",
              "typeVersion": 1.8,
              "position": [
                620,
                0
              ],
              "id": "3441c8d7-ab8f-4432-aa25-881e0f2e32ca",
              "name": "OpenAI",
              "credentials": {
                "openAiApi": {
                  "id": "ctuqDjigd4GRMI9O",
                  "name": "OpenAi account lgiraldo1109"
                }
              }
            },
            {
              "parameters": {
                "sessionIdType": "customKey",
                "sessionKey": "={{ $json.sessionId }}"
              },
              "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
              "typeVersion": 1.3,
              "position": [
                920,
                220
              ],
              "id": "e501a6f3-b0df-4940-bea3-791561c50fa0",
              "name": "Simple Memory"
            },
            {
              "parameters": {
                "updates": [
                  "message"
                ],
                "additionalFields": {}
              },
              "type": "n8n-nodes-base.telegramTrigger",
              "typeVersion": 1.2,
              "position": [
                -420,
                80
              ],
              "id": "6d0eab40-b1cb-4b0b-a1ce-5c051415e685",
              "name": "Telegram Trigger",
              "webhookId": "93fc3421-1e80-4244-a7d9-bad7ba36d58a",
              "credentials": {
                "telegramApi": {
                  "id": "S8fFaxxxxx",
                  "name": "Linkedin Asisstant xxxxx"
                }
              }
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "4dbe8415-c1f3-4ca4-83d4-b402a7e146af",
                      "name": "chatInput",
                      "value": "={{ $json.chatInput || $json.message.text}}",
                      "type": "string"
                    },
                    {
                      "id": "6dbcf8e2-2e45-42f2-857f-ec9334eaccbf",
                      "name": "sessionId",
                      "value": "={{ $json.sessionId || $json.message.chat.id }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                180,
                80
              ],
              "id": "4f29af08-96ee-4bee-8e77-912c9b867e75",
              "name": "Edit Fields"
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "b5eefc59-86da-46a7-8b25-ef80162b2294",
                      "leftValue": "={{ $json.message.from.id }}",
                      "rightValue": "1204979333",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                -260,
                80
              ],
              "id": "3abb6b11-f5e5-4b71-a9de-59ed1775f34c",
              "name": "If"
            },
            {
              "parameters": {
                "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
                "text": "={{ $json.output }}",
                "additionalFields": {
                  "appendAttribution": false
                }
              },
              "type": "n8n-nodes-base.telegram",
              "typeVersion": 1.2,
              "position": [
                1640,
                0
              ],
              "id": "2d805f93-99bf-4bf9-adbc-b44ba33bead6",
              "name": "Telegram",
              "webhookId": "f3192d4c-9fd2-4016-b61e-550ba64c738e",
              "credentials": {
                "telegramApi": {
                  "id": "wETKY5YR9kZbuvd0",
                  "name": "Telegram account personal"
                }
              }
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "bfbef46d-ac4a-4476-8bfe-e620b8837014",
                      "leftValue": "={{ $('When chat message received').item.json.action }}",
                      "rightValue": "",
                      "operator": {
                        "type": "string",
                        "operation": "exists",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                1020,
                0
              ],
              "id": "5bc883e7-3edc-4f20-9e7d-6b7dc3d3d077",
              "name": "If1"
            }
          ],
          "connections": {
            "When chat message received": {
              "main": [
                [
                  {
                    "node": "Edit Fields",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Simple Memory": {
              "ai_memory": [
                [
                  {
                    "node": "OpenAI",
                    "type": "ai_memory",
                    "index": 0
                  }
                ]
              ]
            },
            "Telegram Trigger": {
              "main": [
                [
                  {
                    "node": "If",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit Fields": {
              "main": [
                [
                  {
                    "node": "OpenAI",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "If": {
              "main": [
                [
                  {
                    "node": "Edit Fields",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OpenAI": {
              "main": [
                [
                  {
                    "node": "If1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "If1": {
              "main": [
                [],
                [
                  {
                    "node": "Telegram",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": null,
          "meta": {
            "templateCredsSetupCompleted": true
          },
          "pinData": {},
          "versionId": "17d19d96-77d3-4db6-b4d3-badd42ad1152",
          "triggerCount": 2,
          "tags": []
        }
      ]
    },
    "meta": {
      "instanceId": "dab6d53fa72af268b5bbe7b09dd57a4d773f89fd650778c11e4f0eb7da6f9ac0"
    }
  }